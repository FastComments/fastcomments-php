<?php
/**
 * CustomConfigParametersTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * fastcomments
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * CustomConfigParametersTest Class Doc Comment
 *
 * @category    Class
 * @description CustomConfigParameters
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class CustomConfigParametersTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "CustomConfigParameters"
     */
    public function testCustomConfigParameters()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absolute_and_relative_dates"
     */
    public function testPropertyAbsoluteAndRelativeDates()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "absolute_dates"
     */
    public function testPropertyAbsoluteDates()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allow_anon"
     */
    public function testPropertyAllowAnon()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allow_anon_flag"
     */
    public function testPropertyAllowAnonFlag()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allow_anon_votes"
     */
    public function testPropertyAllowAnonVotes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allowed_languages"
     */
    public function testPropertyAllowedLanguages()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "collapse_replies"
     */
    public function testPropertyCollapseReplies()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "comment_count_format"
     */
    public function testPropertyCommentCountFormat()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "comment_html_rendering_mode"
     */
    public function testPropertyCommentHtmlRenderingMode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "comment_thread_delete_mode"
     */
    public function testPropertyCommentThreadDeleteMode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "commenter_name_format"
     */
    public function testPropertyCommenterNameFormat()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "count_above_toggle"
     */
    public function testPropertyCountAboveToggle()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "custom_css"
     */
    public function testPropertyCustomCss()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "default_avatar_src"
     */
    public function testPropertyDefaultAvatarSrc()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "default_sort_direction"
     */
    public function testPropertyDefaultSortDirection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "default_username"
     */
    public function testPropertyDefaultUsername()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_auto_admin_migration"
     */
    public function testPropertyDisableAutoAdminMigration()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_auto_hash_tag_creation"
     */
    public function testPropertyDisableAutoHashTagCreation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_blocking"
     */
    public function testPropertyDisableBlocking()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_commenter_comment_delete"
     */
    public function testPropertyDisableCommenterCommentDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_commenter_comment_edit"
     */
    public function testPropertyDisableCommenterCommentEdit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_email_inputs"
     */
    public function testPropertyDisableEmailInputs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_live_commenting"
     */
    public function testPropertyDisableLiveCommenting()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_notification_bell"
     */
    public function testPropertyDisableNotificationBell()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_profiles"
     */
    public function testPropertyDisableProfiles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_success_message"
     */
    public function testPropertyDisableSuccessMessage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_toolbar"
     */
    public function testPropertyDisableToolbar()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_unverified_label"
     */
    public function testPropertyDisableUnverifiedLabel()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_voting"
     */
    public function testPropertyDisableVoting()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_commenter_links"
     */
    public function testPropertyEnableCommenterLinks()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_search"
     */
    public function testPropertyEnableSearch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_spoilers"
     */
    public function testPropertyEnableSpoilers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_third_party_cookie_bypass"
     */
    public function testPropertyEnableThirdPartyCookieBypass()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_view_counts"
     */
    public function testPropertyEnableViewCounts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_vote_list"
     */
    public function testPropertyEnableVoteList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_wysiwyg"
     */
    public function testPropertyEnableWysiwyg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gif_rating"
     */
    public function testPropertyGifRating()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "has_dark_background"
     */
    public function testPropertyHasDarkBackground()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "header_html"
     */
    public function testPropertyHeaderHtml()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hide_avatars"
     */
    public function testPropertyHideAvatars()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hide_comments_under_count_text_format"
     */
    public function testPropertyHideCommentsUnderCountTextFormat()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "input_after_comments"
     */
    public function testPropertyInputAfterComments()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "limit_comments_by_groups"
     */
    public function testPropertyLimitCommentsByGroups()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "locale"
     */
    public function testPropertyLocale()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_comment_character_length"
     */
    public function testPropertyMaxCommentCharacterLength()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_comment_created_count_pupm"
     */
    public function testPropertyMaxCommentCreatedCountPupm()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "no_custom_config"
     */
    public function testPropertyNoCustomConfig()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "no_image_uploads"
     */
    public function testPropertyNoImageUploads()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "no_styles"
     */
    public function testPropertyNoStyles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "page_size"
     */
    public function testPropertyPageSize()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "readonly"
     */
    public function testPropertyReadonly()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "require_sso"
     */
    public function testPropertyRequireSso()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sso_sec_lvl"
     */
    public function testPropertySsoSecLvl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "restricted_link_domains"
     */
    public function testPropertyRestrictedLinkDomains()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "show_comment_save_success"
     */
    public function testPropertyShowCommentSaveSuccess()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "show_live_right_away"
     */
    public function testPropertyShowLiveRightAway()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "show_question"
     */
    public function testPropertyShowQuestion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "spam_rules"
     */
    public function testPropertySpamRules()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "translations"
     */
    public function testPropertyTranslations()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "use_show_comments_toggle"
     */
    public function testPropertyUseShowCommentsToggle()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "use_single_line_comment_input"
     */
    public function testPropertyUseSingleLineCommentInput()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vote_style"
     */
    public function testPropertyVoteStyle()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "widget_question_id"
     */
    public function testPropertyWidgetQuestionId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "widget_question_results_style"
     */
    public function testPropertyWidgetQuestionResultsStyle()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "widget_question_style"
     */
    public function testPropertyWidgetQuestionStyle()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "widget_question_when_to_save"
     */
    public function testPropertyWidgetQuestionWhenToSave()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "widget_questions_required"
     */
    public function testPropertyWidgetQuestionsRequired()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "widget_sub_question_visibility"
     */
    public function testPropertyWidgetSubQuestionVisibility()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "wrap"
     */
    public function testPropertyWrap()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
